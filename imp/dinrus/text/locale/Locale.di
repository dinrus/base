/*******************************************************************************

        Это врата Динруса в I18N, расширяющие базовый модуль Выкладка
        поддержкой культуро- и регион-специфичного форматирования
        чисел, дат, времени и валюты.

        Используется как независимый форматёр точно так же, как Выкладка, либо
        комбинируется с другими сущностями, такими как Стдвыв. Чтобы активировать
        Стдвыв по-французски, выполните следующее:
        ---
        Стдвыв.выкладка = new Локаль (Культура.дайКультуру ("fr-FR"));
        ---

        Заметьте, что Стдвыв - это совместно используемая сущность, 
		поэтому на любое её использование повлияет выше приведённый
		пример. Чтобы приложения поддерживали несколько регионов,
        нужно вместо этого создать несколько экземпляров Локаль, и
        кэшировать их соответствующим образом.

        В дополненте к регион-специфичным валюте, дате и времени, Локаль
        добавляет ещё мудрёную опцию форматирования,
		которую не предоставляет Выкладка:
        помещение численных цифр с использованием форматирования '#', например,
        Локаль поддерживает - вместе с использованием '$', '-' и '.'
        регионо-специфик.

        Локаль на данный момент применяет только utf8. Поддержку Utf16 и utf32
        можно добавить позднее.

******************************************************************************/

module text.locale.Locale;

private import text.locale.Core,
        text.locale.Convert;

private import time.Time;
private import text.convert.Layout;
public  import text.locale.Core: Культура;

/*******************************************************************************

        Локаль-включен wrapper around text.convert.Layout

*******************************************************************************/

public class Локаль : Выкладка!(сим)
{
    private ФорматДатыВремени  форматДаты;
    private ФорматЧисла    форматЧисла;

    /**********************************************************************

    **********************************************************************/

    this (ИСлужбаФормата службаФормата = пусто)
    {
        форматЧисла = ФорматЧисла.дайЭкземпляр (службаФормата);
        форматДаты = ФорматДатыВремени.дайЭкземпляр (службаФормата);
    }

    /***********************************************************************

    ***********************************************************************/

    protected override ткст неизвестное (ткст вывод, ткст форматируй, ИнфОТипе тип, Арг p)
    {
        switch (тип.classinfo.имя[9])
        {
        // Special case for Время.
        case КодТипа.СТРУКТ:
            if (тип is typeid(Время))
                return форматируйДатуВремя (вывод, *cast(Время*) p, форматируй, форматДаты);

            return тип.вТкст;

        default:
            break;
        }

        return "{необрабатываемый тип аргумента: " ~ тип.вТкст ~ '}';
    }

    /**********************************************************************

    **********************************************************************/

    protected override ткст целое (ткст вывод, дол знач, ткст alt, бдол маска=бдол.max, ткст форматируй=пусто)
    {
        return форматируйЦелое (вывод, знач, alt, форматЧисла);
    }

    /**********************************************************************

    **********************************************************************/

    protected override ткст плавающее (ткст вывод, реал знач, ткст форматируй)
    {
        return форматируйДво (вывод, знач, форматируй, форматЧисла);
    }
}


/*******************************************************************************

*******************************************************************************/

debug (Локаль)
{
    import io.Console, text.locale.Locale;
    import time.WallClock;

    проц main ()
    {
        auto выкладка = new Локаль (Культура.дайКультуру ("fr-FR"));

        Квывод (выкладка ("{:D}", Куранты.сейчас)) ();
    }
}
