module time.chrono.Hijri;

private import time.chrono.Calendar;


/**
 * $(ANCHOR _Hijri)
 * Представляет Hijri Календарь.
 */
extern(D) class Хиджри : Календарь
{
    /**
     * Представляет текущ эра.
     */
    public const бцел ХИДЖРИ_ЭРА = 1;

    /**
     * Переписано. Возвращает Значение Времени, установленное в указанный дата и время в указанном _era.
     * Параметры:
     *   год = Целое, представляющее _год.
     *   месяц = Целое, представляющее _месяц.
     *   день = Целое, представляющее _день.
     *   час = Целое, представляющее _час.
     *   минута = Целое, представляющее _минута.
     *   секунда = Целое, представляющее _секунда.
     *   миллисекунда = Целое, представляющее _миллисекунда.
     *   эра = Целое, представляющее _era.
     * Возвращает: Время, установленное в указанную дата и время.
     */
     override Время воВремя(бцел год, бцел месяц, бцел день, бцел час, бцел минута, бцел секунда, бцел миллисекунда, бцел эра);

    /**
     * Переписано. Возвращает день недели в указанном Время.
     * Параметры: время = Значение Времени.
     * Возвращает: Значение ДняНедели, представляющее день недели времени.
     */
     override ДеньНедели дайДеньНедели(Время время);

    /**
     * Переписано. Возвращает день месяца в указанном Время.
     * Параметры: время = Значение Времени.
     * Возвращает: Целое, представляющее день месяца времени.
     */
     override бцел дайДеньМесяца(Время время);

    /**
     * Переписано. Возвращает день годв в указанном Время.
     * Параметры: время = Значение Времени.
     * Возвращает: Целое, представляющее день годв времени.
     */
     override бцел дайДеньГода(Время время);

    /**
     * Переписано. Возвращает день годв в указанном Время.
     * Параметры: время = Значение Времени.
     * Возвращает: Целое, представляющее день годв времени.
     */
     override бцел дайМесяц(Время время);

    /**
     * Переписано. Возвращает год в указанном Время.
     * Параметры: время = Значение Времени.
     * Возвращает: Целое, представляющее год во времени.
     */
     override бцел дайГод(Время время);

    /**
     * Переписано. Возвращает эру в указанном Время.
     * Параметры: время = Значение Времени.
     * Возвращает: Целое, представляющее эру во времени.
     */
     override бцел дайЭру(Время время);

    /**
     * Переписано. Возвращает число дней в указанном _год и _месяц указанной _era.
     * Параметры:
     *   год = Целое, представляющее _год.
     *   месяц = Целое, представляющее _месяц.
     *   эра = Целое, представляющее _era.
     * Возвращает: The число дней в указанном _год и _месяц указанной _era.
     */
     override бцел дайДниМесяца(бцел год, бцел месяц, бцел эра);

    /**
     * Переписано. Возвращает число дней в указанном _год указанной _era.
     * Параметры:
     *   год = Целое, представляющее _год.
     *   эра = Целое, представляющее _era.
     * Возвращает: The число дней в указанном _год в указанном _era.
     */
     override бцел дайДниГода(бцел год, бцел эра);

    /**
     * Переписано. Возвращает число месяцев в указанном _год указанной _era.
     * Параметры:
     *   год = Целое, представляющее _год.
     *   эра = Целое, представляющее _era.
     * Возвращает: The число месяцев в указанном _год в указанном _era.
     */
     override бцел дайМесяцыГода(бцел год, бцел эра);
    

    /**
     * Переписано. Показывает. является ли указанный _год в указанном _era високосным _год.
     * Параметры: год = Целое, представляющее _год.
     * Параметры: эра = Целое, представляющее _era.
     * Возвращает: да , если указанный _год високосный _год; иначе, нет.
     */
     override бул високосен_ли(бцел год, бцел эра);

    /**
     * $(I Property.) Переписано. Выводит список эр в текущ Календаре.
     * Возвращает: Массив целых чисел, представляющий эры в текущ Календаре.
     */
     override бцел[] эры();

    /**
     * $(I Property.) Переписано. Получает определитель, ассоциированный с текущ Календарём.
     * Возвращает: Целое, представляющее определитель текущ Календаря.
     */
     override бцел ид();

  // private дол дниВГод(бцел год);
  //  private дол днейС1Янв(бцел год, бцел месяц, бцел день);
  //  private цел откиньЧасть(дол тики, ЧастьДаты часть);

}

