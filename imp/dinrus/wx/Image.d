
module wx.Image;
public import wx.common;
public import wx.Defs;

public import wx.Palette;
public import wx.Colour;

//-----------------------------
extern(D) class Рисунок : ВизОбъект
{
    public static проц иницВсеОбработчики();
    //static this();
    public this(ЦелУкз вхобъ);
    public this();
    public this(ткст имя);
    public this(цел ширь, цел высь);
    public this(byte[] данные, ПТипБитмап тип);
    public this(цел ширь, цел высь, бул очистить);
    public this(цел ширь, цел высь, ббайт *данные, бул статдан);
    public this(цел ширь, цел высь, ббайт *данные, ббайт *альфа, бул статдан);
    public this(Рисунок рисунок);
    //public static ВизОбъект Нов(ЦелУкз укз);
    public проц разрушь();
    public цел ширь();
    public цел высь();
    public Размер размер();
    public бул загрузиФайл(ткст путь);
    public бул загрузиФайл(ткст путь, ПТипБитмап тип);
    public бул загрузиФайл(ткст путь, ПТипБитмап тип, цел индекс);
    public бул загрузиФайл(ткст имя, ткст маймТип);
    public бул загрузиФайл(ткст имя, ткст маймТип, цел индекс);
    public бул сохраниФайл(ткст путь);
    public бул сохраниФайл(ткст путь, ПТипБитмап тип);
    public бул сохраниФайл(ткст имя, ткст маймТип);
    public Рисунок ремасштабруй(цел ширь, цел высь);
    public Рисунок масштабируй(цел ширь, цел высь);
    public проц устЦветМаски(ббайт к, ббайт з, ббайт с);
    public проц цветМаски(Цвет значение);
    public проц маска(бул значение);//естьМаска
    public бул маска();
    public Рисунок копируй();
    public Рисунок субРисунок(Прямоугольник прям);
    public проц вставь(Рисунок рисунок, цел x, цел y);
    public Рисунок сожмиНа(цел шФактор, цел вФактор);
    public Рисунок вращай(дво угол, Точка центрВращения);
    public Рисунок вращай(дво угол, Точка центрВращения, бул интерполирующ);
    public Рисунок вращай(дво угол, Точка центрВращения, бул интерполирующ, Точка смещениеПослеВращения);
    public Рисунок вращай90();
    public Рисунок вращай90(бул по_часовой);
    public Рисунок зеркало();
    public Рисунок зеркало(бул горизонтально);
    public проц замени(ббайт r1, ббайт g1, ббайт b1, ббайт r2, ббайт g2, ббайт b2);
    public проц преобразуйВМоно(ббайт к, ббайт з, ббайт с);
    public проц устКЗС(цел x, цел y, ббайт к, ббайт з, ббайт с);
    public ббайт дайКрасный(цел x, цел y);
    public ббайт дайЗелёный(цел x, цел y);
    public ббайт дайСиний(цел x, цел y);
    public проц устАльфу(цел x, цел y, ббайт альфа);
    public ббайт дайАльфу(цел x, цел y);
    public бул найдиПервНеиспЦвет(inout ббайт к, inout ббайт з, inout ббайт с);
    public бул найдиПервНеиспЦвет(inout ббайт к, inout ббайт з, inout ббайт с, ббайт стартК);
    public бул найдиПервНеиспЦвет(inout ббайт к, inout ббайт з, inout ббайт с, ббайт стартК, ббайт стартЗ);
    public бул найдиПервНеиспЦвет(inout ббайт к, inout ббайт з, inout ббайт с, ббайт стартК, ббайт стартЗ, ббайт стартС);
    public бул устМаскуИзРисунка(Рисунок маска, ббайт mr, ббайт mg, ббайт mb);
    public бул преобразуйАльфуВМаску();
    public бул преобразуйАльфуВМаску(ббайт порог);
    public static бул читается(ткст имя);
    public static цел дайЧлоРисунков(ткст имя);
    public static цел дайЧлоРисунков(ткст имя, ПТипБитмап тип);
    public бул Ок();
    public ббайт маскаК();
    public ббайт маскаЗ();
    public ббайт маскаС();
    public бул естьПалитра();
    public Палитра палитра();
    public проц палитра(Палитра значение);
    public проц устОпцию(ткст имя, ткст значение);
    public проц устОпцию(ткст имя, цел значение);
    public ткст дайОпцию(ткст имя);
    public цел дайЦелОпц(ткст имя);
    public бул естьОпц(ткст имя);
    public бцел члоЦветов();
    public бцел члоЦветов(бцел стопПосле);
    public бцел рассчитайГистограмму(ГистограммаРисунка h);
    public static проц добавьОбработчик(ОбработчикРисунка обработчик);
    public static проц вставьОбработчик(ОбработчикРисунка обработчик);
    public static бул удалиОбработчик(ткст имя);
    public static ОбработчикРисунка найдиОбработчик(ткст имя);
    public static ОбработчикРисунка найдиОбработчик(ткст расширение, цел типРис);
    public static ОбработчикРисунка найдиОбработчик(цел типРис);
    public static ОбработчикРисунка найдиМаймОбработчика(ткст маймТип);
    static ткст расшУайлдкардРисунка();
    public static проц зачистьОбработчики();
    public static проц иницСтандартнОбработчики();
}
//---------------------------------------------------------------------
extern(D) class ОбработчикРисунка : ВизОбъект
{
    public this(ЦелУкз вхобъ);
    public ткст имя();
    public проц имя(ткст значение);
    public ткст расширение();
    public проц расширение(ткст значение);
    public цел тип();
    public проц тип(цел значение);
    public ткст маймтип();
    public проц маймтип(ткст значение);
}
//---------------------------------------------------------------------
extern(D) class ЗаписьГистограммыРисунка : ВизОбъект
{
    public this(ЦелУкз вхобъ);
    //private this(ЦелУкз вхобъ, бул памСобств);
    public this();
    ~this();
    public бцел индекс();
    public проц индекс(бцел значение);
    public бцел значение();
    public проц значение(бцел значение);
}
//---------------------------------------------------------------------
extern(D) class ГистограммаРисунка : ВизОбъект
{
    public this(ЦелУкз вхобъ);
    public this();
    public static бцел сделайКлюч(ббайт к, ббайт з, ббайт с);
    public бул найдиПервНеиспЦвет(inout ббайт к, inout ббайт з, inout ббайт с);
    public бул найдиПервНеиспЦвет(inout ббайт к, inout ббайт з, inout ббайт с, ббайт стартК);
    public бул найдиПервНеиспЦвет(inout ббайт к, inout ббайт з, inout ббайт с, ббайт стартК, ббайт стартЗ);
    public бул найдиПервНеиспЦвет(inout ббайт к, inout ббайт з, inout ббайт с, ббайт стартК, ббайт стартЗ, ббайт стартС);
}