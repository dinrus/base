module crypto.digest.Digest;

/*******************************************************************************


        Интерфейс DigestTransform определяет интерфейс алгоритмов дайджестов сообщений,
        таких как MD5 и SHA. Дайджесты сообщений - это безопасные хэш-функции, которые
        принимают сообщение произвольной длины и в качестве вывода производят дайджест
        фиксированной длины.

        Объект, реализующий DigestTransform должен быть изначально инициализованным.
        Данные обрабатываются через вывозы метода "обнови". Как только все данные
        были отправлены алгоритму, дайджест финализуется и вычисляется методом
        дайджеста.

        Метод дайджеста может вызываться только единожды. После вызова метода дайджеста
        алгоритм сбрасывается в его исходное состояние.

        С использованием метода "обнови", данные могут обрабатываться кусок за кусочком,
        что полезно в случаях с потоками данных.

        Например:
        ---
        // создать MD5 хэш алгоритм
        Мд5 хэш = new Мд5();

        // обработать некоторые данные
        хэш.обнови("The fast brown fox");

        // обработать ещё данные
        хэш.обнови(" jumps over the lazy dog");

        // завершить алгоритм и произвести дайджест
        ббайт[] дайджест = хэш.двоичныйДайджест();
        ---

******************************************************************************/

extern(D) abstract class Дайджест
{
    /*********************************************************************

           Обрабатывает данные.

           Примечания:
                 Обновляет состояние хэш-алгоритма новыми двнными.

    *********************************************************************/

    abstract Дайджест обнови (проц[] данные);

    /********************************************************************

           Вычисляет дайджест и переустанавливает состояние.

           Параметры:
               буфер = буфер, куда записать дайджест

           Примечания:
               Если этого буфера недостаточно для вмещения дайджеста,
               размещается в памяти и возвращается новый буфер.
               Сотояние алгоритма всегда сбрасывается после вызова
               двоичныйДайджест. Метод размерДайджеста используется для
               находжения размера буфера.

    *********************************************************************/

    abstract ббайт[] двоичныйДайджест(ббайт[] буфер = пусто);

    /********************************************************************

           Возвращает размер этого дайдеста в байтах.

           Возвращает:
               размер этого дайджеста в байтах

           Примечания:
             Возвращает размер дайджеста.

    *********************************************************************/

    abstract бцел размерДайджеста();

    /*********************************************************************

           Вычисляет дайджест как 16-ричный ткст и переустанавливает состояние.

           Параметры:
               буфер =  может быть предложен буфер, куда записывать этот
                        дайджест. Он должен вмещать
                        2 * размерДайджеста символов.

           Примечания:
                Если этот буфер недостаточен для вмещения этого 16-ричного дайджеста,
                размещается новый буфер и возвращается.Состояние алгоритма
                всегда сбрасывается после вызова функции гексДайджест.

    *********************************************************************/

    ткст гексДайджест (ткст буфер = пусто);
}

