module io.device.File;
private import io.device.Device;



class Файл : Устройство
{
        public alias Устройство.читай  читай;
        public alias Устройство.пиши пиши;

         align(1) struct Стиль
        {
                Доступ          доступ;                 /// права доступа
                Откр            открой;                   ///  открыть
                Общ           совместно;                  ///  совместно
                Кэш           кэш;                  /// в кэш
        }

        enum Доступ : ббайт     {
                                Чит      = 0x01,       /// читаемый ли
                                Зап     = 0x02,       /// записываемый ли
                                ЧитЗап = 0x03,       /// всё
                                }

        enum Откр : ббайт       {
                                Сущ=0,               /// должен существовать
                                Созд,                 /// создать или упростить
                                Sedate,                 /// создать при необходимости
                                Доб,                 ///  создать при необходимости
                                Нов,                    /// не может существовать
                                };

        enum Общ : ббайт      {
                                Нет=0,                 /// не разделяется
                                Чит,                   ///совместное чтение
                                ЧитЗап,              /// открыть для любого вида работ
                              };

        enum Кэш : ббайт      {
                                Нет      = 0x00,       /// не оптимизировать
                                Случай    = 0x01,       /// оптимизировать для случайного доступа
                                Поток    = 0x02,       /// оптимизируовать для потока
                                WriteThru = 0x04,       /// backing-кэш флаг
                              };

        const Стиль ЧитСущ = {Доступ.Чит, Откр.Сущ};
        const Стиль ЧитОбщ = {Доступ.Чит, Откр.Сущ, Общ.Чит};
        const Стиль ЗапСущ = {Доступ.Зап, Откр.Сущ};
        const Стиль ЗапСозд = {Доступ.Зап, Откр.Созд};
        const Стиль ЧитДоб = {Доступ.Зап, Откр.Доб};
        const Стиль ЧитЗапСущ = {Доступ.ЧитЗап, Откр.Сущ}; 
        const Стиль ЧитЗапСозд = {Доступ.ЧитЗап, Откр.Созд}; 
        const Стиль ЧитЗапОткр = {Доступ.ЧитЗап, Откр.Sedate}; 

        private ткст  путь_;
        private Стиль   стиль_;

        this ();
        this (ткст путь, Стиль стиль = ЧитСущ);
        Стиль стиль ();    
        override ткст вТкст ();  
        static проц[] получи (ткст путь, проц[] приёмн = пусто);
        static проц установи (ткст путь, проц[] контент);
        static проц добавь (ткст путь, проц[] контент);
		
        version(Win32)
        {
            protected бул открой (ткст путь, Стиль стиль, DWORD добатр);
            проц открой (ткст путь, Стиль стиль = ЧитСущ);
            проц упрости ();
            проц упрости (дол размер);
            override дол сместись (дол смещение, Якорь якорь = Якорь.Нач);
            дол позиция ();
            дол длина (); alias длина length;
	        проц синх ();
        }

        version (Posix)
        {
          
            protected бул открой (ткст путь, Стиль стиль,
                                     цел добфлаги, цел доступ = 0666);
            проц открой (ткст путь, Стиль стиль = ЧитСущ);
            проц упрости ();
            override проц упрости (дол размер);
            override дол сместись (дол смещение, Якорь якорь = Якорь.Нач);
            дол позиция ();
            дол длина ();				alias длина length;
	        проц синх ();
			
        }
}
alias Файл ФВвод;
alias Файл ФВывод;