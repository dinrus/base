module io.stream.Lines;

private import io.stream.Iterator;

/*******************************************************************************

        Итерирует по набору (т.е. обходит набор) текстовых образцов.

        Каждый образец выставляется клиенту как срез исходного контента,
        где этот срез транзитивен (transient). Если нужно удержать предоставленный
        контент, тогда его нужно соответствующе дублировать с помощью .dup. 

        Предполагается, что предоставляемый этим обходчикам контент полностью
        может быть только читаем (только чтение). Этого правила придерживаются
		все текущие обходчики, но пользователь может менять контент через
		срез получи().
		
		Чтобы усилить желаемый аспект только чтения, в этот код пришлось быть
		ввести повторное копирование, либо же компилятор должен поддерживать
		массивы только для чтения (сейчас это уже есть в D2).

        Смотрите Разграничители, Строки, Образцы, Кавычки.

*******************************************************************************/

class Строки(T) : Обходчик!(T)
{
        /***********************************************************************
        
                Конструирует неинициализованный обходчик. Например:
                ---
                auto строки = new Строки!(сим);

                проц somefunc (ИПотокВвода поток)
                {
                        foreach (строка; строки.установи(поток))
                                 Квывод (строка).нс;
                }
                ---

                Конструирует потоковый обходчик на потоке:
                ---
                проц somefunc (ИПотокВвода поток)
                {
                        foreach (строка; new Строки!(сим) (поток))
                                 Квывод (строка).нс;
                }
                ---
                
                Конструирует потоковый обходчик на проводе:
                ---
                foreach (строка; new Строки!(сим) (new Файл ("myfile")))
                         Квывод (строка).нс;
                ---

        ***********************************************************************/

        this (ИПотокВвода поток = пусто)
        {
                super (поток);
        }

        /***********************************************************************

                Читает строку текста и возвращает нет, когда больше не
				наблюдается доступного контента.

        ***********************************************************************/

        final бул читайнс (ref T[] контент)
        {
                контент = super.следщ;
                return контент.ptr !is пусто;
        }

        /***********************************************************************
        
                Реализация сканера для этого обходчика. Находит '\n',
                и поглощает всё, что предшествует '\r'.
                
        ***********************************************************************/

        protected т_мера скан (проц[] данные)
        {
                auto контент = (cast(T*) данные.ptr) [0 .. данные.length / T.sizeof];

                foreach (цел i, T c; контент)
                         if (c is '\n')
                            {
                            цел срез = i;
                            if (i && контент[i-1] is '\r')
                                --срез;
                            установи (контент.ptr, 0, срез, i);
                            return найдено (i);
                            }

                return неНайдено;
        }
}



/*******************************************************************************

*******************************************************************************/

debug(UnitTest)
{
        private import io.device.Array;

        unittest 
        {
                auto p = new Строки!(сим) (new Массив("blah"));
        }
}


/*******************************************************************************

*******************************************************************************/

debug (Строки)
{
        import io.Console;
        import io.device.Array;

        проц main()
        {
                auto строки = new Строки!(сим)(new Массив("one\ntwo\r\nthree"));
                foreach (i, строка, разделитель; строки)
                         Квывод (строка) (разделитель);
        }
}
