/*******************************************************************************

        copyright:      Copyright (c) 2004 Kris Bell. Все права защищены

        license:        BSD стиль: $(LICENSE)

        version:        Initial release: April 2004

        author:         Kris

*******************************************************************************/

module net.model.UriView;

/*******************************************************************************

       Реализует совместимую с RFC 2396 спецификацию URI. Смотрите
        <A HREF="http://ftp.ics.uci.edu/pub/ietf/уир/rfc2396.txt">эту страницу</A>
        для дополнительной информации.

        The implementation fails the spec on two counts: it doesn't insist
        on a схема being present in the ОбзорУИР, и it doesn't implement the
        "Relative References" support noted in section 5.2.

        Note that IRI support can be implied by assuming each of инфОПользователе, путь,
        запрос, и фрагмент are UTF-8 кодирован
        (see <A HREF="http://www.w3.org/2001/Talks/0912-IUC-IRI/paper.html">
        this страница</A> for further details).

        Use a Уир instead where you need в_ alter specific уир атрибуты.

*******************************************************************************/

abstract class ОбзорУИР
{
    public alias порт        дайПорт;
    public alias дефолтнПорт дайДефолтнПорт;
    public alias схема      дайСхему;
    public alias хост        дайХост;
    public alias валКЦЕПорт   дайВалидныйПорт;
    public alias инфОПользователе    дайИнфОПользователе;
    public alias путь        дайПуть;
    public alias запрос       дайЗапрос;
    public alias фрагмент    дайФрагмент;
    public alias порт        устПорт;
    public alias схема      устСхему;
    public alias хост        устХост;
    public alias инфОПользователе    устИнфОПользователе;
    public alias запрос       устЗапрос;
    public alias путь        установиПуть;
    public alias фрагмент    устФрагмент;

    public enum {InvalКСЕРort = -1}

    /***********************************************************************

            Возвращает дефолтный порт для заданной схемы. InvalКСЕРort
            возвращается, если схема неизвестна, или порт не принимает.

    ***********************************************************************/

    abstract цел дефолтнПорт (ткст схема);

    /***********************************************************************

            Возвращает разобранную схему, или пусто, если схема не была
            указана.

    ***********************************************************************/

    abstract ткст схема();

    /***********************************************************************

            Возвращает разобраный хост, или пусто, если хост не был
            указан.

    ***********************************************************************/

    abstract ткст хост();

    /***********************************************************************

            Возвращает разобранный номер порта, или InvalКСЕРort, если порт
            не был предоставлен.

    ***********************************************************************/

    abstract цел порт();

    /***********************************************************************

            Возвращает действительный номер порта, выполняя поиск по
            известным схемам, если порт не был явно задан.

    ***********************************************************************/

    abstract цел валКЦЕПорт();

    /***********************************************************************

            Возвращает разобранную инфОПользователе, или пусто, если
             инфОПользователе не была предоставлена.

    ***********************************************************************/

    abstract ткст инфОПользователе();

    /***********************************************************************

            Возвращает разобранный путь, или пусто, если путь не был
            предоставлен.

    ***********************************************************************/

    abstract ткст путь();

    /***********************************************************************

            Возвращает разобранный запрос, или пусто, если запрос не был
            предоставлен.

    ***********************************************************************/

    abstract ткст запрос();

    /***********************************************************************

            Возвращает разобранный фрагмент, или пусто, если фрагмент не был
            предоставлен.

    ***********************************************************************/

    abstract ткст фрагмент();

    /***********************************************************************

            Возвращает да или нет, касательно того, считается ли
            схема ОбзорУИР генерной.

    ***********************************************************************/

    abstract бул генерен_ли ();

    /***********************************************************************

            Выдаёт контент данного ОбзорУИР. Вывод строится по
            RFC 2396.

    ***********************************************************************/

    abstract ткст вТкст ();
}

