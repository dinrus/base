module col.model.Multiset;
public import col.model.Collection,
       col.model.Addable,
       col.model.Multi;

/**
 * Мультинабор - это контейнер, позволяющий добавлять несколько экземпляров
 * с одинаковым значением.
 *
 * Он подобен списку, за исключением того, что нет требования к упорядоченности.
 * Т.е. элементы не обязательно сохраняются в порядке добавления.
 *
 * Поскольку порядок не важен, коллекция может переупорядочивать элементы при
 * удалении или добавлении, оптимизируя операции.
 */
interface Мультинабор(З) : Коллекция!(З), Добавляемый!(З), Мульти!(З)
{
    /**
     * Совариантно зачисть (из Коллекция)
     */
    Мультинабор!(З) зачисть();

    /**
     * Совариантно dup (из Коллекция)
     */
    Мультинабор!(З) dup();

    /**
     * Совариантно удали (из Коллекция)
     */
    Мультинабор!(З) удали(З з);

    /**
     * Совариантно удали (из Коллекция)
     */
    Мультинабор!(З) удали(З з, ref бул былУдалён);

    /**
     * Совариантно добавь (из Добавляемый)
     */
    Мультинабор!(З) добавь(З з);

    /**
     * Совариантно добавь (из Добавляемый)
     */
    Мультинабор!(З) добавь(З з, ref бул былДобавлен);

    /**
     * Совариантно добавь (из Добавляемый)
     */
    Мультинабор!(З) добавь(Обходчик!(З) обх);

    /**
     * Совариантно добавь (из Добавляемый)
     */
    Мультинабор!(З) добавь(Обходчик!(З) обх, ref бцел члоДобавленных);

    /**
     * Совариантно добавь (из Добавляемый)
     */
    Мультинабор!(З) добавь(З[] массив);

    /**
     * Совариантно добавь (из Добавляемый)
     */
    Мультинабор!(З) добавь(З[] массив, ref бцел члоДобавленных);

    /**
     * Совариантно удалиВсе (из Мульти)
     */
    Мультинабор!(З) удалиВсе(З з);

    /**
     * Совариантно удалиВсе (из Мульти)
     */
    Мультинабор!(З) удалиВсе(З з, ref бцел члоУдалённых);

    /**
     * Получает наиболее подходящий элемент из мультинабора. Заметьте, что
     * не предполагается никакого определённого порядка элементов, поэтому
	 * это может быть последним добавленным элементом, либо перрвым,
     * либо одним из середины. Этот элемент будет первым итерируемым,
	 * если мультинабор используется как итератор.
     * Следовательно, удаление этого элемента посредством удали(дай())
     * would be less than the normal O(n) runtime.
     */
    З дай();

    /**
     * Удалить наиболее подходящий элемент в мультинаборе и вернуть его
     * значение.  Это равнозначно удали(дай()), но вполняет только один поиск.
     *
     * Неопределённо, если вызывается пустой мультинабор.
     */
    З изыми();
}
