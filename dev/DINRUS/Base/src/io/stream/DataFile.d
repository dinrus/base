module io.stream.DataFile;

private import io.device.File;

private import io.stream.Data;

/*******************************************************************************

        Composes a seekable файл with buffered binary ввод. A сместись causes
        the ввод буфер в_ be cleared

*******************************************************************************/
export:

class ВводФайлаДанных : ВводДанных
{
    private Файл провод;
	
export:
    /***********************************************************************

            Compose a FileStream

    ***********************************************************************/

    this (ткст путь, Файл.Стиль стиль = Файл.ЧитСущ)
    {
        this (new Файл (путь, стиль));
    }

    /***********************************************************************

            Wrap a Файл экземпляр

    ***********************************************************************/

    this (Файл файл)
    {
        super (провод = файл);
    }

    /***********************************************************************

            Возвращает underlying провод

    ***********************************************************************/

    final Файл файл ()
    {
        return провод;
    }
}


/*******************************************************************************

        Composes a seekable файл with buffered binary вывод. A сместись causes
        the буфер вывода в_ be flushed first

*******************************************************************************/

class ВыводФайлаДанных : ВыводДанных
{
    private Файл провод;
	
	export:

    /***********************************************************************

            Compose a FileStream

    ***********************************************************************/

    this (ткст путь, Файл.Стиль стиль = Файл.ЗапСозд)
    {
        this (new Файл (путь, стиль));
    }

    /***********************************************************************

            Wrap a FileConduit экземпляр

    ***********************************************************************/

    this (Файл файл)
    {
        super (провод = файл);
    }

    /***********************************************************************

            Возвращает underlying провод

    ***********************************************************************/

    final Файл файл ()
    {
        return провод;
    }
}

debug (DataFile)
{
    import io.Stdout;
	import io.stream.DataFile;

    проц main()
    {
        auto myFile = new ВыводФайлаДанных("Hello.txt");
        myFile.пиши("some текст");
        myFile.слей;
        Стдвыв.форматнс ("{}:{}", myFile.файл.позиция, myFile.сместись(myFile.Якорь.Тек));
    }
}
