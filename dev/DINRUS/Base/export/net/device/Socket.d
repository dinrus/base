module net.device.Socket;

private import sys.common, thread;
private import io.device.Conduit;
package import net.device.Berkeley;

/*******************************************************************************

        Обёртка Беркли API для реализации абстракции ИПровод
        и добавления специфичного поточного функционала.

*******************************************************************************/

extern(D) class Сокет : Провод, ИВыбираемый
{
        public alias исконный сокет;             // обратная совместимость

        private НаборСокетов pending;              // синхронные таймауты
        private Беркли  беркли;             // обёртка беркли сокета


        /// see super.таймаут(цел)
       // deprecated проц установиТаймаут (дво t) ;

       // deprecated бул былТаймаут ();

        /***********************************************************************
        
                Создаёт поточный сокет Интернета.

        ***********************************************************************/

        this ();

        /***********************************************************************
        
                Создаёт сокет Интернета с предоставленными характеристиками.

        ***********************************************************************/

        this (Адрес адр) ;
                                
        /***********************************************************************
        
                Создаёт сокет Интернета.

        ***********************************************************************/

        this (ПСемействоАдресов семейство, ПТипСок тип, ППротокол протокол);

        /***********************************************************************

                Возвращает имя данного устройства.

        ***********************************************************************/

        override ткст вТкст();

        /***********************************************************************

                Моделирует укз-ориентированное устройство.

                TODO: выяснить, как добиться, чтобы не выставлять этого.
                case

        ***********************************************************************/

        Дескр фукз ();

        /***********************************************************************

                Возвращает обёртку сокета.
                
        ***********************************************************************/

        Беркли* исконный ();

        /***********************************************************************

                Возвращает предпочитаемый размер для буферированния провода I/O.

        ***********************************************************************/

        override т_мера размерБуфера ();

        /***********************************************************************

                Подключиться к предоставленной конечной точке.
        
        ***********************************************************************/

        Сокет подключись (ткст адрес, бцел порт);

        /***********************************************************************

                Подключиться к предоставленной конечной точке.
        
        ***********************************************************************/

        Сокет подключись (Адрес адр);

        /***********************************************************************

                Привязать этот сокет. Как правило используется для конфигурирования
                слушающего (принимающего) сокета (такого как сервер или мультикастный сокет).
                Заданный адрес должен описывать локальный адаптер, или
                определять одиночный порт (АДР_ЛЮБОЙ), чтобы ОС могла присвоить
                адрес локальному адаптеру.
        
        ***********************************************************************/

        Сокет вяжи (Адрес адрес);

        /***********************************************************************

                Информирует другой конец подключенного сокета о последующей
                недоступности этого сокета. Как правило, вызывается перед закрой().
        
                Функция "глуши" обрывает подключение этого сокета: 

                    -   прекращает приём данных для этого сокета. Если поступают
                        новые данные, они отбрасываются.

                    -   останавливает попытки передачи данных из этого сокета. Также
                        сбрасывает любые данные, которые ждут отправки. Прекращает
                        искать подтверждение приёма уже отправленных данных;
                        не выполняет повторную отправку, если какие-то данные потеряны.

        ***********************************************************************/

        Сокет глуши ();

        /***********************************************************************

                Освобождает данный Сокет.

                Помните, что при нормальных условиях всегда нужно отключать Сокет,
                то есть предварительно вызывать функцию "глуши" на всех
                подключенных сокетах.

        ***********************************************************************/

        override проц открепи ();
        
       /***********************************************************************

                Читает контент из этого сокета. У этой операции может быть установлен
                таймаут вызовом метода установиТаймаут() с ненулевым значением.

                Возвращает число байтов, считанных из сокета, либо
                ИПровод.Кф, если больше нет доступного контента.

        ***********************************************************************/

        override т_мера читай (проц[] приёмн);
        
        /***********************************************************************

        ***********************************************************************/

        override т_мера пиши (проц[] ист);

        /***********************************************************************

                Передача контента другого провода на этот. Возвращает
                приёмн ИПотокВывода, либо выводит ВВИскл при неудаче.

                Выполняет оптимизированные трансферты. 

        ***********************************************************************/

        override ИПотокВывода копируй (ИПотокВвода ист, т_мера макс = -1);

        /***********************************************************************
 
                Управление сокет IO под таймаут.

        ***********************************************************************/

        package final бул жди (бул чтение);

        /***********************************************************************

                Выводит ВВИскл с заметкой о последней ошибке.
        
        ***********************************************************************/

        final проц ошибка ();
        
}



/*******************************************************************************


*******************************************************************************/

extern(D) class СерверСокет : Сокет
{      
        /***********************************************************************

        ***********************************************************************/

        this (бцел порт, цел бэклог=32, бул реюз=нет);

        /***********************************************************************

        ***********************************************************************/

        this (Адрес адр, цел бэклог=32, бул реюз=нет);

        /***********************************************************************

                Возвращает имя этого устройства.

        ***********************************************************************/

        override ткст вТкст();

        /***********************************************************************

        ***********************************************************************/

        Сокет прими (Сокет реципиент = пусто);

}

