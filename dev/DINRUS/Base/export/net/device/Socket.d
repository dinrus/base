module net.device.Socket;

private import sys.common;

private import io.device.Conduit;

package import net.device.Berkeley;

/*******************************************************************************

*******************************************************************************/

version (Windows)
{
         private import sys.common;
}

/*******************************************************************************

        Обёртка Беркли API для реализации абстракции ИПровод
        и добавления специфичного поточного функционала.

*******************************************************************************/

class Сокет : Провод, ИВыбираемый
{
        public alias исконный сокет;             // обратная совместимость

        private НаборСокетов pending;              // синхронные таймауты
        private Беркли  беркли;             // обёртка беркли сокета


        /// see super.таймаут(цел)
        deprecated проц установиТаймаут (дво t) ;

        deprecated бул былТаймаут ();

        /***********************************************************************
        
                Создаёт поточный сокет Интернета.

        ***********************************************************************/

        this ();

        /***********************************************************************
        
                Создаёт сокет Интернета с предоставленными характеристиками.

        ***********************************************************************/

        this (Адрес адр) ;
                                
        /***********************************************************************
        
                Создаёт сокет Интернета.

        ***********************************************************************/

        this (ПСемействоАдресов семейство, ПТипСок тип, ППротокол протокол);

        /***********************************************************************

                Возвращает имя данного устройства.

        ***********************************************************************/

        override ткст вТкст();

        /***********************************************************************

                Моделирует укз-ориентированное устройство.

                TODO: выяснить, как добиться, чтобы не выставлять этого.
                case

        ***********************************************************************/

        Дескр фукз ();

        /***********************************************************************

                Возвращает обёртку сокета.
                
        ***********************************************************************/

        Беркли* исконный ();

        /***********************************************************************

                Возвращает предпочитаемый размер для буферированния провода I/O.

        ***********************************************************************/

        override т_мера размерБуфера ();

        /***********************************************************************

                Подключиться к предоставленной конечной точке.
        
        ***********************************************************************/

        Сокет подключись (ткст адрес, бцел порт);

        /***********************************************************************

                Подключиться к предоставленной конечной точке.
        
        ***********************************************************************/

        Сокет подключись (Адрес адр);

        /***********************************************************************

                Привязать этот сокет. Как правило используется для конфигурирования
                слушающего (принимающего) сокета (такого как сервер или мультикастный сокет).
                Заданный адрес должен описывать локальный адаптер, или
                определять одиночный порт (АДР_ЛЮБОЙ), чтобы ОС могла присвоить
                адрес локальному адаптеру.
        
        ***********************************************************************/

        Сокет вяжи (Адрес адрес);

        /***********************************************************************

                Inform другой конец of a подключен сокет that we're no longer
                available. In general, this should be invoked перед закрой()
        
                The глуши function shuts down the connection of the сокет: 

                    -   stops receiving данные для этого сокет. If further данные 
                        arrives, it is rejected.

                    -   stops trying в_ transmit данные из_ this сокет. Also
                        discards any данные waiting в_ be sent. Стоп looking for 
                        acknowledgement of данные already sent; don't retransmit 
                        if any данные is lost.

        ***********************************************************************/

        Сокет глуши ();

        /***********************************************************************

                Release this Сокет

                Note that one should всегда disconnect a Сокет under 
                нормаль conditions, и generally invoke глуши on все 
                подключен СОКЕТs передhand

        ***********************************************************************/

        override проц открепи ();
        
       /***********************************************************************

                Чит контент из_ the сокет. Note that the operation 
                may таймаут if метод установиТаймаут() имеется been invoked with 
                a non-zero значение.

                Returns the число of байты читай из_ the сокет, or
                ИПровод.Кф where there's no ещё контент available.

        ***********************************************************************/

        override т_мера читай (проц[] приёмн);
        
        /***********************************************************************

        ***********************************************************************/

        override т_мера пиши (проц[] ист);

        /***********************************************************************

                Transfer the контент of другой провод в_ this one. Returns
                the приёмн ИПотокВывода, либо throws ВВИскл on failure.

                Does optimized transfers 

        ***********************************************************************/

        override ИПотокВывода копируй (ИПотокВвода ист, т_мера max = -1);

        /***********************************************************************
 
                Manage сокет IO under a таймаут

        ***********************************************************************/

        package final бул жди (бул reading);

        /***********************************************************************

                Throw an ВВИскл noting the последний ошибка
        
        ***********************************************************************/

        final проц ошибка ();

        /***********************************************************************
 
        ***********************************************************************/

        version (Win32)
        {
                private OVERLAPPED overlapped;
        
                /***************************************************************
        
                        Connect в_ the provопрed endpoint
                
                ***************************************************************/
        
                private проц asyncConnect (Адрес адр);
        
                /***************************************************************
        
                ***************************************************************/
        
                private проц asyncCopy (Дескр укз);

                /***************************************************************

                        Чит a чанк of байты из_ the файл преобр_в the provопрed
                        Массив. Returns the число of байты читай, либо Кф where 
                        there is no further данные.

                        Operates asynchronously where the hosting нить is
                        configured in that manner.

                ***************************************************************/

                private т_мера asyncRead (проц[] приёмн);

                /***************************************************************

                        Зап a чанк of байты в_ the файл из_ the provопрed
                        Массив. Returns the число of байты записано, либо Кф if 
                        the вывод is no longer available.

                        Operates asynchronously where the hosting нить is
                        configured in that manner.

                ***************************************************************/

                private т_мера asyncWrite (проц[] ист);

                /***************************************************************

                ***************************************************************/

                private т_мера жди (планировщик.Тип тип, бцел байты=0);
        
                /***************************************************************
        
                ***************************************************************/
        
                private static проц patch (т_сокет приёмн, бцел как, т_сокет* ист=пусто);
        }


        /***********************************************************************
 
        ***********************************************************************/

        version (Posix)
        {
                /***************************************************************
        
                        Connect в_ the provопрed endpoint
                
                ***************************************************************/
        
                private проц asyncConnect (Адрес адр);
        
                /***************************************************************
        
                ***************************************************************/
        
                Сокет asyncCopy (Дескр файл);

                /***************************************************************

                        Чит a чанк of байты из_ the файл преобр_в the provопрed
                        Массив. Returns the число of байты читай, либо Кф where 
                        there is no further данные.

                        Operates asynchronously where the hosting нить is
                        configured in that manner.

                ***************************************************************/

                private т_мера asyncRead (проц[] приёмн);

                /***************************************************************

                        Зап a чанк of байты в_ the файл из_ the provопрed
                        Массив. Returns the число of байты записано, либо Кф if 
                        the вывод is no longer available.

                        Operates asynchronously where the hosting нить is
                        configured in that manner.

                ***************************************************************/

                private т_мера asyncWrite (проц[] ист);
        }
}



/*******************************************************************************


*******************************************************************************/

class СерверСокет : Сокет
{      
        /***********************************************************************

        ***********************************************************************/

        this (бцел порт, цел backlog=32, бул reuse=нет);

        /***********************************************************************

        ***********************************************************************/

        this (Адрес адр, цел backlog=32, бул reuse=нет);

        /***********************************************************************

                Возвращает имя of this устройство

        ***********************************************************************/

        override ткст вТкст();

        /***********************************************************************

        ***********************************************************************/

        Сокет прими (Сокет реципиент = пусто);

        /***********************************************************************

        ***********************************************************************/

        version (Windows)
        {
                /***************************************************************

                ***************************************************************/

                private проц asyncAccept (Сокет реципиент);
        }

        /***********************************************************************

        ***********************************************************************/

        version (Posix)
        {
                /***************************************************************

                ***************************************************************/

                private проц asyncAccept (Сокет реципиент);
        }
}

