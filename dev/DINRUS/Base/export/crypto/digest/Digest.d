module crypto.digest.Digest;

/*******************************************************************************


        Интерфейс DigestTransform определяет интерфейс алгоритмов дайджестов сообщений,
        таких как MD5 и SHA. Дайджесты сообщений - это безопасные хэш-функции, которые
        принимают сообщение произвольной длины и в качестве вывода производят дайджест
        фиксированной длины.

        Объект, реализующий DigestTransform должен быть изначально инициализованным.
        Данные обрабатываются через вывозы метода "обнови". Как только все данные
        были отправлены алгоритму, дайджест финализуется и вычисляется методом
        дайджеста.

        Метод дайджеста может вызываться только единожды. После вызова метода дайджеста
        алгоритм сбрасывается в его исходное состояние.

        С использованием метода "обнови", данные могут обрабатываться кусок за кусочком,
        что полезно в случаях с потоками данных.

        Например:
        ---
        // создать MD5 хэш алгоритм
        Мд5 хэш = new Мд5();

        // обработать некоторые данные
        хэш.обнови("The быстро brown fox");

        // обработать ещё данные
        хэш.обнови(" jumps over the lazy dog");

        // завершить алгоритм и произвести дайджест
        ббайт[] дайджест = хэш.двоичныйДайджест();
        ---

******************************************************************************/

extern(D) abstract class Дайджест
{
    /*********************************************************************

           Processes данные

           Примечания:
                 Updates the хэш algorithm состояние with new данные

    *********************************************************************/

    abstract Дайджест обнови (проц[] данные);

    /********************************************************************

           Computes the дайджест и resets the состояние

           Параметры:
               буфер = a буфер can be supplied for the дайджест в_ be
                        записано в_

           Примечания:
               If the буфер is not large enough в_ hold the
               дайджест, a new буфер is allocated и returned.
               The algorithm состояние is always сбрось после a вызов в_
               двоичныйДайджест. Use the размерДайджеста метод в_ найди out как
               large the буфер имеется в_ be.

    *********************************************************************/

    abstract ббайт[] двоичныйДайджест(ббайт[] буфер = пусто);

    /********************************************************************

           Возвращает the размер in байты of the дайджест

           Возвращает:
             the размер of the дайджест in байты

           Примечания:
             Возвращает the размер of the дайджест.

    *********************************************************************/

    abstract бцел размерДайджеста();

    /*********************************************************************

           Computes the дайджест as a hex ткст и resets the состояние

           Параметры:
               буфер = a буфер can be supplied in which the дайджест
                        will be записано. It needs в_ be able в_ hold
                        2 * размерДайджеста симвы

           Примечания:
                If the буфер is not large enough в_ hold the hex дайджест,
                a new буфер is allocated и returned. The algorithm
                состояние is always сбрось после a вызов в_ гексДайджест.

    *********************************************************************/

    ткст гексДайджест (ткст буфер = пусто);
}

