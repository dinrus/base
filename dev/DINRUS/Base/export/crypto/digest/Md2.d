/*******************************************************************************
        This module реализует the MD2 Message Дайджест Algorithm as described 
        by RFC 1319 The MD2 Message-Дайджест Algorithm. B. Kaliski. April 1992.

*******************************************************************************/
module crypto.digest.Md2;

public  import crypto.digest.Digest;
private import crypto.digest.MerkleDamgard;

/*******************************************************************************

*******************************************************************************/

extern(D) class Мд2 : МерклеДамгард
{

        /***********************************************************************

                Конструирует Мд2

        ***********************************************************************/

        this();

        /***********************************************************************

                Initialize the cipher

                Примечания:
                Возвращает the cipher состояние в_ it's начальное значение

        ***********************************************************************/

        protected override проц сбрось();

        /***********************************************************************

                Obtain the дайджест

                Возвращает:
                the дайджест

                Примечания:
                Возвращает дайджест of the текущ cipher состояние, this may 
                be the final дайджест, or a дайджест of the состояние between 
                calls в_ обнови()

        ***********************************************************************/

        protected override проц создайДайджест(ббайт[] буф);

        /***********************************************************************

                The MD 2 дайджест размер is 16 байты
 
        ***********************************************************************/

        бцел размерДайджеста() ;

        /***********************************************************************

                 блок размер

                Возвращает:
                the блок размер

                Примечания:
                Specifies the размер (in байты) of the блок of данные в_ пароль в_
                each вызов в_ трансформируй(). For MD2 the размерБлока is 16.

        ***********************************************************************/

        protected override бцел размерБлока();

        /***********************************************************************

                Length паддинг размер

                Возвращает:
                the length паддинг размер

                Примечания:
                Specifies the размер (in байты) of the паддинг which uses the
                length of the данные which имеется been ciphered, this паддинг is
                carried out by the падДлин метод. For MD2 the добавьРазмер is 
                0

        ***********************************************************************/

        protected override бцел добавьРазмер();

        /***********************************************************************

                Pads the cipher данные

                Параметры:
                данные = a срез of the cipher буфер в_ заполни with паддинг

                Примечания:
                Fills the passed буфер срез with the appropriate паддинг 
                for the final вызов в_ трансформируй(). This паддинг will заполни 
                the cipher буфер up в_ размерБлока()-добавьРазмер().

        ***********************************************************************/

        protected override проц падСооб (ббайт[] данные);

        /***********************************************************************

                Performs the cipher on a блок of данные

                Параметры:
                данные = the блок of данные в_ cipher

                Примечания:
                The actual cipher algorithm is carried out by this метод on
                the passed блок of данные. This метод is called for every
                размерБлока() байты of ввод данные и once ещё with the 
                остаток данные псеп_в_конце в_ размерБлока().

        ***********************************************************************/

        protected override проц трансформируй (ббайт[] ввод);

        /***********************************************************************

                Final processing of cipher.

                Примечания:
                This метод is called после the final трансформируй just приор в_
                the creation of the final дайджест. The MD2 algorithm требует
                an добавьitional step at this stage. Future ciphers may or may not
                require this метод.

        ***********************************************************************/

        protected override проц расширь();
}


debug(UnitTest)
{
        unittest 
        {
        static ткст[] strings = 
        [
                "",
                "a",
                "abc",
                "сообщение дайджест",
                "abcdefghijklmnopqrstuvwxyz",
                "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",
                "12345678901234567890123456789012345678901234567890123456789012345678901234567890"
        ];

        static ткст[] результаты = 
        [
                "8350e5a3e24c153df2275c9f80692773",
                "32ec01ec4a6dac72c0ab96fb34c0b5d1",
                "da853b0d3f88d99b30283a69e6ded6bb",
                "ab4f496bfb2a530b219ff33031fe06b0",
                "4e8ddff3650292ab5a4108c3aa47940b",
                "da33def2a42df13975352846c30338cd",
                "d5976f79d83d3a0dc9806c3c66f3efd8"
        ];

        Мд2 h = new Мд2();

        foreach (цел i, ткст s; strings) 
                {
                h.обнови(s);
                ткст d = h.гексДайджест();
                assert(d == результаты[i],":("~s~")("~d~")!=("~результаты[i]~")");
                }
        }
}

