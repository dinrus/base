module col.model.SetX;

private import  col.model.SetView,
        col.model.IteratorX,
        col.model.Dispenser;

/**
 *
 * MutableSets поддерживают операцию включения, добавляющюю элемент
 * только тогда, когда он отсутствует.
 *
        author: Doug Lea
 * @version 0.93
**/

public interface Набор(T) : ОбзорНабора!(T), Расходчик!(T)
{
    public override Набор!(T) дубликат();
    public alias дубликат dup;

    /**
     * Включает указанный элемент в эту коллекцию.
     * Без эффекта, если этот элемент уже имеется.
     * @param элемент добавляемый элемент
     * Возвращает: условие:
     * <PRE>
     * имеется(элемент) &&
     * no spurious effects &&
     * Версия меняется, если !PREV(this).имеется(элемент)
     * </PRE>
     * Выводит исключение: ИсклНедопустимыйЭлемент if !canInclude(элемент)
    **/

    public проц добавь (T элемент);


    /**
     * Включает все элементы этого перечисления в коллекцию.
     * По поведению равнозначно
     * <PRE>
     * while (e.ещё()) include(e.получи());
     * </PRE>
     * @param e включаемые элементы
     * Выводит исключение: ИсклНедопустимыйЭлемент, если !можноВключить(элемент)
     * Выводит исключение: ИсклПовреждённыйОбходчик
    **/

    public проц добавь (Обходчик!(T) e);
    public alias добавь opCatAssign;
}

