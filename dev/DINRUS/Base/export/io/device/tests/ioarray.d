  module ioarray;
  
  //import io.Stdout;
 //   import io.device.Array, io.device.BitBucket;
	import thread, io.device.ThreadPipe;
//	alias io.device.Array.Массив Массив;

    проц testThreadPipe()
    {
        бцел[] исток = new бцел[1000];
        foreach(i, ref x; исток)
            x = i;

        ПайпНить пн = new ПайпНить(16);
        проц нитьА()
        {
            проц[] исхБуф = исток;
            while(исхБуф.length > 0)
            {
                исхБуф = исхБуф[пн.пиши(исхБуф)..$];
            }
            пн.стоп();
        }
        Нить a = new Нить(&нитьА);
        a.старт();
        цел значчтен;
        цел последн = -1;
        т_мера члочтен;
        while((члочтен = пн.читай((&значчтен)[0..1])) == значчтен.sizeof)
        {
            assert(значчтен == последн + 1);
            последн = значчтен;
        }
        assert(члочтен == пн.Кф);
        a.присоедини();
    }

    проц main()
    {

      /+
	  auto b = new Массив(6, 10);
        b.сместись (0);
        b.пиши ("fubar");

       // Стдвыв.форматнс ("протяженность {}, поз {}, считано {}, размер буфера {}",
                                      // b.предел, b.позиция, cast(ткст) b.срез, b.размерБуфера);


        b.пиши ("fubar");
        b.сместись (7);
       // Стдвыв.форматнс ("протяженность {}, поз {}, считано {}, размер буфера {}",
                                     //  b.предел, b.позиция, cast(ткст) b.срез, b.размерБуфера);
		////////////////
        auto a = new Битник;
        a.пиши("bla");
        a.слей();
        a.открепи();
        a.пиши("b"); // at the moment it works, disallow?
        бцел[4] x = 0;
        a.читай(x);
      //  foreach (el;x)
          //  assert(el == 0);
   ///////////////////////////////   
   +/
   	    testThreadPipe();
									   
    }