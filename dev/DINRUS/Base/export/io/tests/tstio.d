  import io.Stdout, io.Path, io.FileSystem, io.FilePath, io.FileScan;
  
  
   проц foo (ФПуть путь)
        {
        Стдвыв("все: ") (путь).нс;
        Стдвыв("путь: ") (путь.путь).нс;
        Стдвыв("файл: ") (путь.файл).нс;
        Стдвыв("папка: ") (путь.папка).нс;
        Стдвыв("имя: ") (путь.имя).нс;
        Стдвыв("расш: ") (путь.расш).нс;
        Стдвыв("суффикс: ") (путь.суффикс).нс.нс;
        }

        проц фс() 
        {
        Стдвыв.форматнс ("Пап: {}", ФСистема.дайПапку);

        auto путь = new ФПуть ("d:\\dinrus\\dev");
        foo (путь);

        путь.установи ("..");
        foo (путь); 

        путь.установи ("...");
        foo (путь); 

        путь.установи (r"/x/y/.файл");
        foo (путь); 

        путь.суффикс = ".foo";
        foo (путь);

        путь.установи ("файл.bar");
        путь.абсолютный("c:/префикс");
        foo(путь);

        путь.установи (r"arf/тест");
        foo(путь);
        путь.абсолютный("c:/префикс");
        foo(путь);

        путь.имя = "foo";
        foo(путь);

        путь.суффикс = ".d";
        путь.имя = путь.суффикс;
        foo(путь);

        }

		
	проц сф()
        {
                auto скан = new СканФайл;

                скан ("..\\tango");

                Стдвыв.форматнс ("{} Папок", скан.папки.length);
                foreach (папка; скан.папки)
                         Стдвыв (папка).нс;

                Стдвыв.форматнс ("\n{} Файлов", скан.файлы.length);
                foreach (файл; скан.файлы)
                         Стдвыв (файл).нс;

                Стдвыв.форматнс ("\n{} Ошибок", скан.ошибки.length);
                foreach (ошибка; скан.ошибки)
                         Стдвыв (ошибка).нс;
        }
  проц main()
        {
		сф();
		фс();
		
      //  Квывод ("hello world").нс;		

        Стдвыв ("hello").нс;               
        Стдвыв (1).нс;                     
        Стдвыв (3.14).нс;                  
        Стдвыв ('b').нс;                   
        Стдвыв ("abc") ("def") (3.14).нс;  
        Стдвыв ("abc", 1, 2, 3).нс;        
        Стдвыв (1, 2, 3).нс;        
        Стдвыв (1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1).нс;

        Стдвыв ("abc {}{}{}", 1, 2, 3).нс; 
        Стдвыв.форматируй ("abc {}{}{}", 1, 2, 3).нс;	
				assert (нормализуй ("\\foo\\..\\john") == "/john");
                assert (нормализуй ("foo\\..\\john") == "john");
                assert (нормализуй ("foo\\bar\\..") == "foo/");
                assert (нормализуй ("foo\\bar\\..\\john") == "foo/john");
                assert (нормализуй ("foo\\bar\\doe\\..\\..\\john") == "foo/john");
                assert (нормализуй ("foo\\bar\\doe\\..\\..\\john\\..\\bar") == "foo/bar");
                assert (нормализуй (".\\foo\\bar\\doe") == "foo/bar/doe");
                assert (нормализуй (".\\foo\\bar\\doe\\..\\..\\john\\..\\bar") == "foo/bar");
                assert (нормализуй (".\\foo\\bar\\..\\..\\john\\..\\bar") == "bar");
                assert (нормализуй ("foo\\bar\\.\\doe\\..\\..\\john") == "foo/john");
                assert (нормализуй ("..\\..\\foo\\bar") == "../../foo/bar");
                assert (нормализуй ("..\\..\\..\\foo\\bar") == "../../../foo/bar");
                assert (нормализуй(r"C:") == "C:");
                assert (нормализуй(r"C") == "C");
                assert (нормализуй(r"c:\") == "C:/");
                assert (нормализуй(r"C:\..\.\..\..\") == "C:/");
                assert (нормализуй(r"c:..\.\boo\") == "C:../boo/");
                assert (нормализуй(r"C:..\..\boo\foo\..\.\..\..\bar") == "C:../../../bar");
                assert (нормализуй(r"C:boo\..") == "C:");

foreach (файл; коллируй (".", "*.d", да))
                         Стдвыв (файл).нс;  
						 
        }