module io.protocol.Reader;

private import  io.Buffer;
public  import  io.model, io.protocol.model;


/*******************************************************************************

        Класс-основа Читатель Каждый читатель оперирует над каким-либо ИБуфер, которого
        ему представляют при конструировании. Читатели - это простые преобразователи данных,
        имеющие строгие правила, относящиеся к формату данных. Например,
        при каждом запросе данных ожидается наличие контента; в противном
		случае выводится исключение. Если данные организованы менее строгим образом,
        тогда лучше использовать напрямую ИБуфер.

        Все читатели поддерживают полный набор исконных типов данных, плюс полное
        выделение типов массивов. Последний может быть сконфигурирован на произведение
        либо копии (.dup) контента этого буфера, либо среза. Смотрите классы
        КопияКучи, СрезБуфера и СрезКучи , чтобы узнать больше. Приложения могут
        отключать управление памятью, конфигурирую Читатель по одному из бинарно
        ориентированных протоколов, и шарантируя отключение 'префикса' необязательного
        протокола.

        Читатели поддерживают Java-вскую нотацию получи(). Однако, в стиле предка Динруса
        помещать элементы ввода-вывода внутри их собственных скобок, наподобии этого:
        
        ---
        цел счёт;
        ткст стих;
        
        читай (стих) (счёт);
        ---

        Заметьте, что каждый элемент читай отделён; этот стиль пристрастно
        известен как "шёпот". Код ниже иллюстрирует базовые операции над
        буфером памяти:
        
---
        auto буф = new Буфер (256);

        // картировать один и тот же буфер всем читателям и писателям
        auto читай = new Читатель (буф);
        auto пиши = new Писатель (буф);

        цел i = 10;
        дол j = 20;
        дво d = 3.14159;
        ткст c = "fred";

        // пишим данные используя синтаксис "шёпот"
        пиши (c) (i) (j) (d);

        // читаем их обратно
        читай (c) (i) (j) (d);


        // опять то же самое, но используем синтаксис помести() вместо прежднего
		
        пиши.помести(c).помести(i).помести(j).помести(d);
        читай.получи(c).получи(i).получи(j).получи(d);
        ---

        Заметьте, что некоторые протоколы, такие как базовая бинарная реализация, 
        ожидают получить число элементов массива из истока. Например,
        при чтении массива из файла, число элементов такде считавается
		из файла, и вывывается конфигурируемый менеджер памяти,
		предоставляющие пространство массиву. Если контент не организован в такой
        манере, прочитать контент массива напрямую можно либо создавая
        Читатель по протоколу, сконфигурированному с отступом от префиксации массива,
        либо напрямую получая доступ к буферу(через выставленные там методы),
        например:

        ---
        проц[10] данные;
                
        читатель.буфер.заполни (данные);
        ---

        Читатели также могут использоваться с любым классом, реализующим
		интерфейс ИЧитаемое, вместе с любой структурой, реализующей
		эквивалентный метод.
        
*******************************************************************************/


extern(D):

 class Читатель : ИЧитатель
{       
	
        /***********************************************************************
        
                Конструирует Читатель на предоставленный поток. Выполняется
                собственная обработка протокола, эквивалентно ПротоколНатив.
				Размещение массива поддерживается через кучу.

        ***********************************************************************/

        this (ИПотокВвода поток);

        /***********************************************************************

                Конструирует Читатель на предоставленный протокол. Преобразование
				ввода-вывода конфигурируется по протоколу, но размещение массивов
                все ещё обрабатывается кучей.
                
        ***********************************************************************/

        this (ИПротокол протокол);

        /***********************************************************************

                Устанавливает разместитель массива и протокол для этого Читателя.
				Смотрите информацию к методу разместитель().
                
        ***********************************************************************/

        this (ИРазместитель разместитель);

        /***********************************************************************
        
                Возвращает буфер, ассоциированный с этим читателем.

        ***********************************************************************/

        final ИБуфер буфер ();
        
        /***********************************************************************       
        
                Получает разместитель, используемый для управления массивом.
				Массивы, как правило, размещаются ИЧитателем, посредством
				сконфигурированных менеджеров.  Ряд классов Разместитель
				доступен для управления памятью при чтение контента массива.
				Кроме того, приложение может нести ответственность за размещение,
				выбирая одну из производных ПротоколНатив  и устанавливая 'префикс'
				в значение "нет". Последнее отключает внутреннее управление массивом.

                Получение доступа к разместителю может давать дополнительные
				элементы управления. Например, некоторые разместители
				получают пользу от операций "сбрось" после обработки
				каждой 'записи' данных.

                По умолчанию, какой-либо ИЧитатель размещает каждый Массив в
                куче. Это можно изменить, построив Читателя с определённым
                Разместителем. Например, есть СрезБуфера, который сделает
				срез Массива прямо из буфера, если такое возможно.

                Детальную информацию можно найти в модуле io.protocol.Allocator.

        ***********************************************************************/

        final ИРазместитель разместитель ();

        /***********************************************************************
        
                Извлечь читаемый класс из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (ИЧитатель.Клозура дг) ;

        /***********************************************************************
        
                Извлечь читаемый класс из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (ИЧитаемое x) ;

        /***********************************************************************

                Извлечь булево значение (бул) из текущей позиции чтения.  
                
        ***********************************************************************/

        final ИЧитатель получи (inout бул x);

        /***********************************************************************

                Извлечь значение беззначного байта (ббайт) из текущей позиции чтения.  
                                
        ***********************************************************************/

        final ИЧитатель получи (inout ббайт x) ;

        /***********************************************************************
        
                Извлечь значение байта (байт) из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (inout байт x);

        /***********************************************************************
        
                Извлечь значение типа беззначное краткое (бкрат) из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (inout бкрат x);

        /***********************************************************************
        
                Извлечь значение типа краткое (крат) из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (inout крат x);

        /***********************************************************************
        
                Извлечь значение типа беззначное целое (бцел) из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (inout бцел x);

        /***********************************************************************
        
                Извлечь целочисленное значение (цел) из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (inout цел x);

        /***********************************************************************
        
               Извлечь значение типа беззначное долгое (бдол) из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (inout бдол x);

        /***********************************************************************
        
                Извлечь значение типа долгое (дол) из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (inout дол x);

        /***********************************************************************
        
                Извлечь значение плавающего типа (плав) из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (inout плав x);

        /***********************************************************************
        
                Извлечь удвоенное значение (дол) из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (inout дво x);

        /***********************************************************************
        
                Извлечь реальное значение (реал) из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (inout реал x);

        /***********************************************************************
        
                Извлечь символьное значение (сим) из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (inout сим x);

        /***********************************************************************
        
                Извлечь широко-символьное значение (шим) из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (inout шим x);

        /***********************************************************************
        
                EИзвлечь удвоенное символьное значение (дим) из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (inout дим x);

        /***********************************************************************

                Извлечь булев массив значений из текущей позиции чтения.  
                                
        ***********************************************************************/

        final ИЧитатель получи (inout бул[] x) ;

        /***********************************************************************

                Извлечь массив значений типа беззначные байты из текущей позиции чтения.   
                                
        ***********************************************************************/

        final ИЧитатель получи (inout ббайт[] x) ;

        /***********************************************************************
        
                Извлечь байтовый массив значений из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (inout байт[] x);
        /***********************************************************************
        
               Извлечь массив беззначных кратких значений из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (inout бкрат[] x);

        /***********************************************************************
        
                Извлечь массив кратких значений из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (inout крат[] x);

        /***********************************************************************
        
                Извлечь массив беззначных целых значений из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (inout бцел[] x);

        /***********************************************************************
        
               Извлечь массив целочисленных значений из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (inout цел[] x);

        /***********************************************************************
        
                Извлечь массив беззначных долгих значений из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (inout бдол[] x);

        /***********************************************************************
        
                Извлечь массив долгих значений из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (inout дол[] x);

        /***********************************************************************
        
                Извлечь массив плавающих значений из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (inout плав[] x);

        /***********************************************************************
        
               Извлечь массив двойных значений из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (inout дво[] x);

        /***********************************************************************
        
                 Извлечь массив реальных значений из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (inout реал[] x);

        /***********************************************************************
        
                Извлечь массив символьных значений из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (inout ткст x);

        /***********************************************************************
        
                 Извлечь массив широко-символьных значений из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (inout шим[] x);

        /***********************************************************************
        
                Извлечь массив двойных символьных значений из текущей позиции чтения.
                
        ***********************************************************************/

        final ИЧитатель получи (inout дим[] x);


        
        /***********************************************************************
        
        ***********************************************************************/

        ИЧитатель загрузиМассив (проц[]* x, бцел ширина, ИПротокол.Тип тип);
        
       проц[] размести (ИПротокол.Читатель читатель, бцел байты, ИПротокол.Тип тип);

        проц[] читайЭлемент (ук приёмн, бцел байты, ИПротокол.Тип тип);
        
       проц[] читайМассив (ук приёмн, бцел байты, ИПротокол.Тип тип, ИПротокол.Разместитель размести);
	  
	  
}
                