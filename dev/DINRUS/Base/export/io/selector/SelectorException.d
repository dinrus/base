module io.selector.SelectorException;

/**
 * ИсклСелектора выводится, когда Селектор не может быть создан, так как
 * недостаточно ресурсов (файловых дескрипторов, памяти и т.п.)
 */
public class ИсклСелектора: Исключение
{
 
    /**
     * Конструирует исключение селектора с заданным текстом.
     *
     * Параметры:
     * файл     = имя файла-исходника, откуда появилось исключение;
     *            для этого параметра обычно используется __FILE__.
     * строка     = число строк исходного файла, откуда выведено исключение;
     *            для этого параметра обычно используется __LINE__.
     */
    public this(ткст сооб, ткст файл, бцел строка)
    {
        super(сооб, файл, строка);
    }
}

/**
 * ИсклОтменённогоПровода выводится, когда селектор ищет зарегистрированный
 * провод и не может найти.
 */
public class ИсклОтменённогоПровода: ИсклСелектора
{
 
    /**
     * Конструирует исключение селектора с заданным текстом.
     *
     * Параметры:
     * файл     = имя файла-исходника, откуда появилось исключение;
     *            для этого параметра обычно используется __FILE__.
     * строка     = число строк исходного файла, откуда выведено исключение;
     *            для этого параметра обычно используется __LINE__.
     */
    public this(ткст файл, бцел строка)
    {
        super("Этот провод не зарегестрирован на данном селекторе", файл, строка);
    }
}

/**
 * ИсклРегистрируемогоПровода выводится, когда селектор обнаруживает попытку
 * повторной регистрации провода.
 */
public class ИсклРегистрируемогоПровода: ИсклСелектора
{
 
    /**
     * Конструирует исключение селектора с заданным текстом.
     *
     * Параметры:
     * файл     = имя файла-исходника, откуда появилось исключение;
     *            для этого параметра обычно используется __FILE__.
     * строка     = число строк исходного файла, откуда выведено исключение;
     *            для этого параметра обычно используется __LINE__.
     */
    public this(ткст файл, бцел строка)
    {
        super("Этот провод уже зарегистрирован на данном селекторе", файл, строка);
    }
}

/**
 * ИсклПрерванногоСистВызова выводится, когда системный вызов был
 * прерван сигналом и селектор не удалось перезапустить автоматически.
 */
public class ИсклПрерванногоСистВызова: ИсклСелектора
{
 
    /**
     * Конструирует исключение селектора с заданным текстом.
     *
     * Параметры:
     * файл     = имя файла-исходника, откуда появилось исключение;
     *            для этого параметра обычно используется __FILE__.
     * строка     = число строк исходного файла, откуда выведено исключение;
     *            для этого параметра обычно используется __LINE__.
     */
    public this(ткст файл, бцел строка)
    {
        super("Системный вызов прерван каким-то сигналом", файл, строка);
    }
}

/**
 * ВнеПамИскл выводится, когда недостаточно памяти.
 */
public class ВнеПамИскл: ИсклСелектора
{
 
    /**
     * Конструирует исключение селектора с заданным текстом.
     *
     * Параметры:
     * файл     = имя файла-исходника, откуда появилось исключение;
     *            для этого параметра обычно используется __FILE__.
     * строка     = число строк исходного файла, откуда выведено исключение;
     *            для этого параметра обычно используется __LINE__.
     */
    public this(ткст файл, бцел строка)
    {
        super("Вне памяти", файл, строка);
    }
}

