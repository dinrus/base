module libprocessor;
import stdrus, cidrus, win;

бул создайБибИзДлл(ткст имяБ, ткст имяД = null, ткст путь = null, ткст расшД = "dll")
{

if(имяД == null) имяД = имяБ;
сис(фм("implib/system %s.lib %s%s.%s", имяБ, путь, имяД, расшД));
return да;
}

бул создайЛистинг(ткст имяБ)
{
сис(фм("d:\\dinrus\\bin\\lib -l %s.lib", имяБ));
	assert(естьФайл(имяБ~".lst"),"Листинг файла не создан");
	скажифнс("\nСоздан листинг библиотеки "~имяБ);
if(естьФайл(имяБ~".lst"))удалиФайл(имяБ~".lib");
	else throw new Исключение("Неудачная генерация листинга",имяБ, __LINE__);
return  да;
}

цел генМакетИмпорта(ткст имяМ, ткст[] список)
{
	СИСТВРЕМЯ систВремя;
	цел счёт = 1;
	
	ДайМестнВремя(&систВремя);
	ткст дата = вТкст(систВремя.день)~"."~вТкст(систВремя.месяц)~"."~вТкст(систВремя.год);
	ткст время = вТкст(систВремя.час)~" ч. "~вТкст(систВремя.минута)~" мин.";

	ткст заг = фм("
	/*******************************************************************************
	*  Файл генерирован автоматически с помощью либпроцессора Динрус               *
	*  Дата:%s                                           Время: %s\n
	*******************************************************************************/

", дата, время);

	ткст имп = фм("
	module lib.%s;

	import stdrus;

	проц грузи(Биб биб)
	{

	", имяМ);

	ткст связка(ткст[] список)
	{
	ткст вяз;

		foreach(выр; список)
			{
			auto рез = убери(выр);
			вяз ~= фм("
		//вяжи(функция_%s)(%s биб);\r\n", счёт, рез);
			счёт++;
			}
		return вяз;
	}	

	ткст вяз = связка(список);

	ткст имя = stdrus.взаг(имяМ);	

	ткст закр ="
	}\r\n\r\n";

		
	ткст жб = фм("ЖанБибгр %s;\r\n", имя);

	ткст гр = фм("
		static this()
		{
			%s.заряжай(\"%s.dll\", &грузи );
		}\r\n",имя, имяМ);
		
	ткст гн = "
	extern(C)
	{\r\n\r\n";

	ткст функ()
	{
	ткст ф;
		for(цел ц = 1; ц < счёт; ц++ )
		{
		  ф ~= фм("
		//проц function() функция_%s; \r\n", ц);
		}
		return  ф;
	}
		
	ткст ф = функ();

	ткст итог = заг~имп~вяз~закр~жб~гр~гн~ф~закр;

	пишиФайл(имяМ~".d", итог);
	инфо(фм("Сгенерирован макет импорта динамической библиотеки %s,
			результирующий текст которого был записан в файл %s",stdrus.взаг(имяМ), имяМ~".d"));
	return 0;	
}

ткст удалитьДубликатыИзТМас(ткст текст)
{
    ткст строка_итог;
    ткст[] список;
	список = разбейнастр(текст);	
	цел и;
	int[ткст] предшстр;
	ткст следщстр = "";
	цел проходка = 0;
	цел взято = -1;
	бул взят = нет;
	
	for( ; и < список.length ; )
	{
	//if(auto т = _сравни(строка, предшстр) == 0) delete список[и]; предшстр = "";
		  
		foreach(строка; список)
		{		
			while(проходка == 0){ goto старт;}
				
			
		if(строка in предшстр) {delete строка; //_скажинс("удалена предшествующая"); 
		}	
		
		старт:	
			
			if(строка == следщстр || строка != пусто)
			{		
				while(!взят)
				{
				if(строка  in предшстр)
							{
								//_скажинс("А я  тоже грю, конца не будет! ");								
							    следщстр = пусто;
								взят = да;
								break;
							}
				//if(строка in предшстр){ _скажинс("бряк!"); break;}
					if(auto т = сравни(строка, список[и]) == 0  )
					{								
					//_скажинс(фм("да: %s = %s ; и она будет взята из списка в результат\n", строка, список[и])) ;
					строка_итог ~= строка~"\r\n"; 
					взято++;					
					предшстр[строка] = взято;								 
											
				    	foreach(стр; список)
						{
								
							if(!(стр  in предшстр))
							{
									//_скажинс("Я нужен! А он? ");
									
									следщстр = стр;
									взят = да;
									break;
							}
						}
					//_скажинс("Бастилия взята!");
					взят = да;
					
					}
				}
				
			}
			взят = нет;
			if(!(строка in предшстр) && строка != следщстр && строка != пусто)
			{
			следщстр = строка;
			//_скажинс("Я нужен!");
			}
			else {
			     foreach(стрк; список)
						{
							if(стрк  in предшстр)
								//_скажинс("Типа конец, что ли? ");								
							    следщстр = пусто;
								взят = да;
								break;
                        }
					}
			проходка++;
			и++;
			//_скажинс(фм("проходка %s\n, следщстр = %s", проходка, следщстр)) ;
		}
	 
	}
return строка_итог;
}

ткст[] обработайЛистинг(ткст имяЛ)
{
 ткст буф = cast(ткст) читайФайл(имяЛ~".lst");
  скажинс(буф);
  ткст[] список = разбейнастр(буф);
  ткст строка_итог;
 
    
  foreach(строка; список)
	{
	auto рез = убери(строка);		
	if(рез == "Publics by name		module"||рез == "Publics by module"||рез == "") {рез = пусто;}
	if(рез != пусто) строка_итог ~= рез~"\n";	
		
	}		
		
	список = пусто;
	список = разбей(строка_итог);
	строка_итог = пусто;
		
	foreach(строка; список)
	{
	auto рез = убери(строка);		
	if(рез != пусто) строка_итог ~= "\""~рез~"\",\r\n"; 
	
	}		
	auto итог = удалитьДубликатыИзТМас(строка_итог);	
	 удалиФайл(имяЛ~".lst");
	список = пусто;
	список = разбей(итог);
 return список;
}

цел обработай(ткст имяБ,ткст расшД = "dll", ткст путь = пусто, ткст имяД = пусто )
{
ткст[] список;

	if(естьФайл(имяБ~".d")){ удалиФайл(имяБ~".d");}// in?
	
	создайБибИзДлл(имяБ, имяД, путь,расшД);	
	assert(естьФайл(имяБ~".lib"), "Не удалось создать библиотеку импорта");
	создайЛистинг(имяБ);
	список = обработайЛистинг(имяБ);
	скажифнс("Листинг библиотеки "~имяБ~" обработан");
	//нс; 		
	
 
    if(список != пусто)
	{
	 генМакетИмпорта(имяБ, список);
	 скажифнс("Создан макет библиотеки "~имяБ);
	 нс; 
	 }

//_удалиФайл(имяБ~".lst"); 
return 0;

}	

проц либпроцессор()
{
скажи("
Чтобы запустить процесс, введите имя dll без расширения
(например: d:\\dinrus\\bin\\atl): ");
ткст[] биб =разбей(читайстр(), "\n");
обработай(биб[0]);

}
///////////////////////////////////////////////////////

цел main(ткст[] арги)
{
if (арги.length <= 1) либпроцессор();
 else
 {
	  for(цел ном = 0; ном == арги.length; ном++)
	  {
	  ткст арг = вЮ8(арги[ном]);
	 скажифнс("Получено указание разобрать библиотеку %s"~".dll", арг);
	 нс;
	  обработай(арг);
	  }
  }
  return 0;
	//scope(exit) выход(0);
}
