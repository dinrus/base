/*********************************************************
   Copyright: (C) 2008 by Steven Schveighoffer.
              All rights reserved

   License: $(LICENSE)

**********************************************************/
module col.model.Collection;

public import col.model.Iterator;

/**
 * Интерфейс коллекция определяет базовый API для всех коллекций.
 *
 * Базовая коллекция должна уметь обходить все свои элементы, сообщать о том, что обх
 * содержит какой-л. элемент, и удалять элементы.  Добавление элементов здесь не
 * поддерживается, т.к. элементы не всегда добавляются просто.  Например, карте
 * нужны как элемент, так и ключ, чтобы добавить обходчик.
 */
interface Коллекция(V) : Обходчик!(V), Чистящий!(V)
{
    /**
     * Очистить контейнер от всех значений
     */
    Коллекция!(V) очисти();

    /**
     * Удаляет элемент с указанным значением.  Это может быть операция O(n).
     * Если коллекция с ключами, то первый элемент, чьё значение
     * совпадает, будет удалён.
     *
     * Возвращает this.
     */
    Коллекция!(V) удали(V v);

    /**
     * Удаляет элемент с указанным значением.  Это может быть операция O(n).
	 * Если коллекция с ключами, то первый элемент, чьё значение
	 * совпадает, будет удалён.
     *
     * Возвращает this.
     *
     * Устанавливает был_Удалён в да, если элемент существовал и был удалён.
     */
    Коллекция!(V) удали(V v, ref бул был_Удалён);

    /**
     * Возвращает да, если в коллекции содержится данное значение.  Может быть O(n).
     */
    бул содержит(V v);

    /**
     * Копирует данную коллекцию. Глубокая копия элементов не выполняется,
     * если они ссылочного или указательного типа.
     */
    Коллекция!(V) dup();
}
